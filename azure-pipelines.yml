resources:
- repo: self
  clean: true
phases:
- phase: Phase_2
  displayName: Linux

  condition: succeededOrFailed()
  queue:
    name: On-site Linux
  steps:
  - script: |  
       #sudo apt-get update
       #sudo apt-get install --yes build-essential g++ libboost-dev libboost-program-options1.65-dev mesa-common-dev libgl1-mesa-dev
        
    displayName: 'Install dependencies'

  - script: |  
       XPLM=3 make -f linux.make
        
    displayName: make

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/X-Plane11'
    inputs:
      SourceFolder: plugin11

      TargetFolder: '$(Build.ArtifactStagingDirectory)/X-Plane11'


  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/X-Plane10'
    inputs:
      SourceFolder: plugin10

      TargetFolder: '$(Build.ArtifactStagingDirectory)/X-Plane10'


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: linux'
    inputs:
      ArtifactName: linux



- phase: Phase_3
  displayName: Mac

  condition: succeededOrFailed()
  queue:
    name: Hosted macOS
  steps:
  - script: |  
       brew install boost
        
    displayName: 'Install boost'

  - script: |  
       XPLM=3 make -f mac.make
        
    displayName: make

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/X-Plane11'
    inputs:
      SourceFolder: plugin11

      TargetFolder: '$(Build.ArtifactStagingDirectory)/X-Plane11'


  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/X-Plane10'
    inputs:
      SourceFolder: plugin10

      TargetFolder: '$(Build.ArtifactStagingDirectory)/X-Plane10'


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: mac'
    inputs:
      ArtifactName: mac



- phase: Phase_1
  displayName: Windows

  condition: succeededOrFailed()
  queue:
    name: Hosted VS2017
    demands: 
   - msbuild
   - visualstudio

  steps:
  - powershell: |  
       git clone https://github.com/Microsoft/vcpkg.git
       cd vcpkg
       .\bootstrap-vcpkg.bat
       .\vcpkg integrate install
       .\vcpkg install boost-property-tree:x64-windows
       .\vcpkg install boost-property-tree:x86-windows
        
    displayName: 'Install Boost using VCPKG'

  - task: VSBuild@1
    displayName: 'Build solution RealSimGear-GNSx30.sln for X-Plane 11'
    inputs:
      solution: 'RealSimGear-GNSx30.sln'

      platform: x64

      configuration: 'Release_X_Plane_11'

      msbuildArchitecture: x64


  - task: VSBuild@1
    displayName: 'Build solution RealSimGear-GNSx30.sln for X-Plane 10 x64'
    inputs:
      solution: 'RealSimGear-GNSx30.sln'

      platform: x64

      configuration: 'Release_X_Plane_10'

      msbuildArchitecture: x64


  - task: VSBuild@1
    displayName: 'Build solution RealSimGear-GNSx30.sln for X-Plane 10 x86'
    inputs:
      solution: 'RealSimGear-GNSx30.sln'

      platform: x86

      configuration: 'Release_X_Plane_10'

      msbuildArchitecture: x64


  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory) for X-Plane 11'
    inputs:
      SourceFolder: 'plugin_Release_X_Plane_11'

      TargetFolder: '$(Build.ArtifactStagingDirectory)/X-Plane11'


  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory) for X-Plane 10'
    inputs:
      SourceFolder: 'plugin_Release_X_Plane_10'

      TargetFolder: '$(Build.ArtifactStagingDirectory)/X-Plane10'


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: windows'
    inputs:
      ArtifactName: windows



- phase: Phase_4
  displayName: Cross-platform plugin

  dependsOn: 
   - Phase_2
   - Phase_3
   - Phase_1
  condition: succeeded()
  queue:
    name: Hosted VS2017
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts linux'
    inputs:
      artifactName: linux


  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts mac'
    inputs:
      artifactName: mac


  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts windows'
    inputs:
      artifactName: windows


  - script: |  
       mkdir $(System.ArtifactsDirectory)\archive\X-Plane11\RealSimGear-GNSx30
       mkdir $(System.ArtifactsDirectory)\archive\X-Plane10\RealSimGear-GNSx30
       
       xcopy /y /e $(System.ArtifactsDirectory)\linux\X-Plane11\RealSimGear-GNSx30 $(System.ArtifactsDirectory)\archive\X-Plane11\RealSimGear-GNSx30
       xcopy /y /e $(System.ArtifactsDirectory)\linux\X-Plane10\RealSimGear-GNSx30 $(System.ArtifactsDirectory)\archive\X-Plane10\RealSimGear-GNSx30
       
       xcopy /y /e $(System.ArtifactsDirectory)\mac\X-Plane11\RealSimGear-GNSx30 $(System.ArtifactsDirectory)\archive\X-Plane11\RealSimGear-GNSx30
       xcopy /y /e $(System.ArtifactsDirectory)\mac\X-Plane10\RealSimGear-GNSx30 $(System.ArtifactsDirectory)\archive\X-Plane10\RealSimGear-GNSx30
       
       xcopy /y /e $(System.ArtifactsDirectory)\windows\X-Plane11\RealSimGear-GNSx30 $(System.ArtifactsDirectory)\archive\X-Plane11\RealSimGear-GNSx30
       xcopy /y /e $(System.ArtifactsDirectory)\windows\X-Plane10\RealSimGear-GNSx30 $(System.ArtifactsDirectory)\archive\X-Plane10\RealSimGear-GNSx30
       
       move /y $(System.ArtifactsDirectory)\archive\X-Plane11\RealSimGear-GNSx30\README.txt $(System.ArtifactsDirectory)\archive
       del /q $(System.ArtifactsDirectory)\archive\X-Plane10\RealSimGear-GNSx30\README.txt
       
        
    displayName: 'Join platform build outputs'

  - task: ArchiveFiles@2
    displayName: 'Archive  $(System.ArtifactsDirectory)\archive'
    inputs:
      rootFolderOrFile: ' $(System.ArtifactsDirectory)\archive'

      archiveFile: '$(Build.ArtifactStagingDirectory)/RealSimGear_X-Plane.zip'


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: cross-platform'
    inputs:
      ArtifactName: 'cross-platform'



